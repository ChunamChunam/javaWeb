<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--        XML映射文件的namespace属性为Mapper接口全限定名-->
<mapper namespace="com.example.demo01.day03.mapper.EmpMapperXml">

    <!--    XML映射文件中sql语句的id与Mapper接口中的方法名一致，并保持返回类型一致-->
    <!--    <select id="listXml" resultType="com.example.demo01.day03.bean.EmpXml">-->
    <!--        select *-->
    <!--        from emp-->
    <!--        where name like concat('%', #{name}, '%')-->
    <!--          and gender = #{gender}-->
    <!--          and entrydate between #{begin} and #{end}-->
    <!--        order by update_time desc-->
    <!--    </select>-->

    <select id="listXml" resultType="com.example.demo01.day03.bean.EmpXml">
        select *
        from emp
        <where>
            <if test="name != null">
                name like concat('%', #{name}, '%')
            </if>

            <if test="gender != null">
                and gender = #{gender}
            </if>

            <if test="begin != null and end != null">
                and entrydate between #{begin} and #{end}
            </if>
        </where>
        order by update_time desc
    </select>

    <update id="updateSQL">
        UPDATE emp
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="gender != null">
                gender=#{gender},
            </if>
            <if test="image != null">
                image=#{image},
            </if>
            <if test="entrydate != null">
                entrydate=#{entrydate},
            </if>
            <if test="deptId != null">
                dept_id=#{deptId},
            </if>
            <if test="updateTime != null">
                update_time=#{updateTime}
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!--    批量删除员工-->
    <!--
        collection:遍历集合
        item: 便利出来的元素
        separator: 分隔符
        open: 遍历
        close: 便利结束后拼接的SQL片段段
    -->
    <delete id="deleteEmpById">
        DELETE FROM emp WHERE id IN
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
</mapper>